/*!
 * This source file is part of the EdgeDB open source project.
 *
 * Copyright 2019-present MagicStack Inc. and the EdgeDB authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export declare const DATE_PRIVATE: unique symbol;
export declare class LocalDateTime {
    private readonly _date;
    constructor(year: number, month?: number, day?: number, hour?: number, minute?: number, second?: number, millisecond?: number);
    getTime(): number;
    getDate(): number;
    getDay(): number;
    getFullYear(): number;
    getHours(): number;
    getMilliseconds(): number;
    getMinutes(): number;
    getMonth(): number;
    getSeconds(): number;
    toDateString(): string;
    toISOString(): string;
    toJSON(): string;
    valueOf(): any;
    toString(): string;
    toDateTime(): Date;
}
export declare class LocalTime {
    private readonly _hours;
    private readonly _minutes;
    private readonly _seconds;
    private readonly _milliseconds;
    constructor(hours: number, minutes?: number, seconds?: number, milliseconds?: number);
    getHours(): number;
    getSeconds(): number;
    getMilliseconds(): number;
    getMinutes(): number;
    valueOf(): string;
    toString(): string;
}
export declare class LocalDate {
    private readonly _year;
    private readonly _month;
    private readonly _day;
    constructor(year: number, monthIndex?: number, day?: number);
    getFullYear(): number;
    getMonth(): number;
    getDate(): number;
    valueOf(): string;
    toString(): string;
    toOrdinal(): number;
    static fromOrdinal(ord: number): LocalDate;
}
export declare class Duration {
    private readonly _microseconds;
    constructor(milliseconds?: number, microseconds?: bigint);
    static fromMicroseconds(microseconds: bigint): Duration;
    toSeconds(): number;
    toMilliseconds(): number;
    toMicroseconds(): bigint;
    toString(): string;
}
